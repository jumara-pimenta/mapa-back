datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_MSSQL_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Car {
  id              String   @id @default(uuid())
  plate           String   @unique
  company         String
  type            String
  lastSurvey      DateTime
  expiration      DateTime
  capacity        Int
  renavam         Int
  lastMaintenance DateTime
  note            String
  isAccessibility Boolean  @default(false)
  routes      Routes[]
  createdAt DateTime @default(now())

  @@map("cars")
}

model Driver {
  id         String   @id @default(uuid())
  name       String
  cpf        String  @unique
  cnh        String  @unique
  validation DateTime
  category   String
  routes      Routes[]
  createdAt DateTime @default(now())

  @@map("drivers")
}

model Employee {
  id           String   @id @default(uuid())
  registration String  @unique
  name         String
  cpf          String  @unique
  rg           String  @unique
  admission    DateTime
  role         String
  shift        String
  costCenter   String
  createdAt DateTime @default(now())
  address     Address[]
  routesDetail  RoutesDetails[]
  @@map("employees")
}

model Address {
  id           String   @id @default(uuid())
  employee     Employee @relation(fields: [employeeId],references: [id])
  employeeId   String
  street       String
  cep          Int 
  number       Int
  complement   String   
  neighborhood String  
  city         String
  state        String
  latitude     String
  longitude    String
  type         Boolean @default(false)
  createdAt DateTime @default(now())

  @@map("addresses")
  
}

model Routes {
  id           String   @id @default(uuid())
  name         String
  car          Car @relation(fields: [carId],references: [id])
  carId        String @unique
  driver       Driver @relation(fields: [driverId],references: [id])
  driverId     String @unique
  routesDetail  RoutesDetails[]
  totalDist    String  
  typeOfRoutes String
  startTime    String
  duration     String
  createdAt DateTime @default(now())

  @@map("routes")
  
}

model RoutesDetails {
  id    String @id@default(uuid())
  routes      Routes @relation(fields: [routesId],references: [id])
  routesId    String
  employee    Employee @relation(fields: [employeeId],references: [id])
  employeeId  String
  createdAt DateTime @default(now())

  @@map("routesdetails")
}